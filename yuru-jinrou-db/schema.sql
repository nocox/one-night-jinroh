CREATE TABLE IF NOT EXISTS reservation
(
    id         SERIAL PRIMARY KEY,
    name       VARCHAR(50) NOT NULL,
    delete_flg BOOLEAN     NOT NULL DEFAULT TRUE
    );

CREATE TABLE IF NOT EXISTS T_USER
(
    t_user_id   SERIAL PRIMARY KEY,
    t_user_name VARCHAR(255) NOT NULL
    );

CREATE TABLE IF NOT EXISTS T_PHONE
(
    t_phone_id     SERIAL PRIMARY KEY,
    t_phone_number varchar(255),
    t_user_id      BIGINT,
    FOREIGN KEY (t_user_id) REFERENCES T_USER (t_user_id)
    );

CREATE TABLE IF NOT EXISTS T_EVENT
(
    t_event_id     SERIAL PRIMARY KEY,
    t_event_title  varchar(255),
    t_event_detail TEXT
    );

CREATE TABLE IF NOT EXISTS T_EVENT_PARTICIPANT
(
 t_event_participant_id SERIAL PRIMARY KEY,
 t_user_id              BIGINT,
 t_event_id             BIGINT,
 FOREIGN KEY (t_user_id) REFERENCES T_USER (t_user_id),
    FOREIGN KEY (t_event_id) REFERENCES T_EVENT (t_event_id)
    );

CREATE TABLE IF NOT EXISTS USER_PROFILE
(
    USER_ID SERIAL,
    USER_NAME VARCHAR(255),
    PRIMARY KEY (USER_ID)
    );

CREATE TABLE IF NOT EXISTS RULE (
                                    RULE_ID SERIAL,
                                    RULE_NAME VARCHAR(255),
    PRIMARY KEY (RULE_ID)
    );

CREATE TABLE IF NOT EXISTS TEMPLATE_RULE (
                                             TEMPLATE_RULE_ID SERIAL,
                                             RULE_ID BIGINT NOT NULL,
                                             TEMPLATE_RULE_NAME VARCHAR(255) NOT NULL,
    PRIMARY KEY (TEMPLATE_RULE_ID),
    CONSTRAINT fk_TEMPLATE_RULE_RULE1
    FOREIGN KEY (RULE_ID)
    REFERENCES RULE (RULE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    );

CREATE TABLE IF NOT EXISTS ROLE (
                                    ROLE_ID SERIAL ,
                                    ROLE_NAME VARCHAR(255) NOT NULL,
    PRIMARY KEY (ROLE_ID)
    );

CREATE TABLE IF NOT EXISTS ROLE_SELECT (
                                           ROLE_SELECT_ID SERIAL ,
                                           ROLE_ID BIGINT NOT NULL,
                                           RULE_ID BIGINT NOT NULL,
                                           PRIMARY KEY (ROLE_SELECT_ID),
    CONSTRAINT fk_ROLE_SELECT_ROLE1
    FOREIGN KEY (ROLE_ID)
    REFERENCES ROLE (ROLE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT fk_ROLE_SELECT_RULE1
    FOREIGN KEY (RULE_ID)
    REFERENCES RULE (RULE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    );

CREATE TABLE IF NOT EXISTS CLS_ROOM_STATUS
(
    ROOM_STATUS VARCHAR(10) NOT NULL,
    PRIMARY KEY (ROOM_STATUS)
    );

CREATE TABLE IF NOT EXISTS ROOM
(
    ROOM_ID SERIAL,
    UUID VARCHAR(255) NOT NULL,
    RULE_ID BIGINT,
    ROOM_STATUS VARCHAR(10) NOT NULL,
    PRIMARY KEY (ROOM_ID),
    CONSTRAINT fk_ROOM_RULE1
    FOREIGN KEY (RULE_ID)
    REFERENCES RULE (RULE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT fk_CLS_ROOM_STATUS_ROOM
    FOREIGN KEY (ROOM_STATUS)
    REFERENCES CLS_ROOM_STATUS (ROOM_STATUS)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    );

CREATE TABLE IF NOT EXISTS ROOM_STATUS_EVENT
(
    ROOM_STATUS_EVENT_ID SERIAL,
    ROOM_ID BIGINT NOT NULL,
    ROOM_STATUS VARCHAR(10) NOT NULL,
    EVENT_TM TIMESTAMP NOT NULL,
    PRIMARY KEY (ROOM_STATUS_EVENT_ID),
    CONSTRAINT fk_ROOM_ID
    FOREIGN KEY (ROOM_ID)
    REFERENCES ROOM (ROOM_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT fk_CLS_ROOM_STATUS_EVENT
    FOREIGN KEY (ROOM_STATUS)
    REFERENCES CLS_ROOM_STATUS (ROOM_STATUS)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    );

CREATE TABLE IF NOT EXISTS ROOM_PARTICIPANT (
                                                ROOM_PARTICIPANT_ID SERIAL,
                                                ROOM_ID BIGINT NOT NULL,
                                                USER_ID BIGINT NOT NULL,
                                                HOST_FLG BOOLEAN NOT NULL,
                                                PRIMARY KEY (ROOM_PARTICIPANT_ID),
    CONSTRAINT fk_ROOM_PARTICIPANT_ROOM1
    FOREIGN KEY (ROOM_ID)
    REFERENCES ROOM (ROOM_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT fk_ROOM_PARTICIPANT_USER1
    FOREIGN KEY (USER_ID)
    REFERENCES USER_PROFILE (USER_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    );

CREATE TABLE IF NOT EXISTS GAME (
                                    GAME_ID SERIAL,
                                    ROOM_ID BIGINT NOT NULL,
                                    RULE_ID BIGINT NOT NULL,
                                    PRIMARY KEY (GAME_ID),
    CONSTRAINT fk_GAME_ROOM1
    FOREIGN KEY (ROOM_ID)
    REFERENCES ROOM (ROOM_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT fk_GAME_RULE1
    FOREIGN KEY (RULE_ID)
    REFERENCES RULE (RULE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    );

CREATE TABLE IF NOT EXISTS CLS_GAME_TERM
(
    GAME_TERM VARCHAR(10) NOT NULL,
    PRIMARY KEY (GAME_TERM)
);

CREATE TABLE IF NOT EXISTS GAME_TERM
(
    GAME_ID   SERIAL,
    GAME_TERM VARCHAR(10) NOT NULL,
    CONSTRAINT fk_GAME_GAME_TERM
        FOREIGN KEY (GAME_ID)
            REFERENCES GAME (GAME_ID)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    PRIMARY KEY (GAME_ID),
    CONSTRAINT fk_CLS_GAME_TERM_GAME_TERM
        FOREIGN KEY (GAME_TERM)
            REFERENCES CLS_GAME_TERM (GAME_TERM)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS GAME_PARTICIPATION (
                                                  GAME_PARTICIPATION_ID SERIAL,
                                                  GAME_ID BIGINT NOT NULL,
                                                  USER_ID BIGINT NOT NULL,
                                                  ROLE_ID BIGINT NOT NULL,
                                                  HOST_FLG BOOLEAN NOT NULL DEFAULT TRUE,
                                                  PRIMARY KEY (GAME_PARTICIPATION_ID),
    CONSTRAINT fk_GAME_PARTICIPATION_GAME1
    FOREIGN KEY (GAME_ID)
    REFERENCES GAME (GAME_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT fk_GAME_PARTICIPATION_USER1
    FOREIGN KEY (USER_ID)
    REFERENCES USER_PROFILE (USER_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT fk_GAME_PARTICIPATION_ROLE1
    FOREIGN KEY (ROLE_ID)
    REFERENCES ROLE (ROLE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    );

CREATE TABLE IF NOT EXISTS NIGHT_ACT (
                                         NIGHT_ACT_ID SERIAL,
                                         GAME_PARTICIPATION_ID BIGINT NOT NULL UNIQUE,
                                         PRIMARY KEY (NIGHT_ACT_ID),
    CONSTRAINT fk_NIGHT_ACT_GAME_PARTICIPATION1
    FOREIGN KEY (GAME_PARTICIPATION_ID)
    REFERENCES GAME_PARTICIPATION (GAME_PARTICIPATION_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    );

CREATE TABLE IF NOT EXISTS VOTE (
                                    VOTE_ID SERIAL,
                                    GAME_PARTICIPATION_ID BIGINT NOT NULL UNIQUE,
                                    TO_GAME_PARTICIPATION_ID BIGINT NULL,
                                    PEACE_VILLAGE_FLG BOOLEAN NOT NULL DEFAULT 'N',
                                    PRIMARY KEY (VOTE_ID),
    CONSTRAINT fk_VOTE_GAME_PARTICIPATION1
    FOREIGN KEY (GAME_PARTICIPATION_ID)
    REFERENCES GAME_PARTICIPATION (GAME_PARTICIPATION_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT fk_VOTE_GAME_PARTICIPATION2
    FOREIGN KEY (TO_GAME_PARTICIPATION_ID)
    REFERENCES GAME_PARTICIPATION (GAME_PARTICIPATION_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    );

CREATE TABLE IF NOT EXISTS GAME_VOTE_TALLY (
                                               GAME_VOTE_TALLY_ID SERIAL,
                                               GAME_ID BIGINT NOT NULL,
                                               GAME_PARTICIPATION_ID BIGINT NOT NULL,
                                               VOTE_COUNT INT NOT NULL DEFAULT 0,
                                               SELECTED BOOLEAN NOT NULL DEFAULT 'N',
                                               PRIMARY KEY (GAME_VOTE_TALLY_ID),
    CONSTRAINT fk_GAME_RESULT_GAME1
    FOREIGN KEY (GAME_ID)
    REFERENCES GAME (GAME_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT fk_GAME_VOTE_TALLY_GAME_PARTICIPATION1
    FOREIGN KEY (GAME_PARTICIPATION_ID)
    REFERENCES GAME_PARTICIPATION (GAME_PARTICIPATION_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    );

CREATE TABLE IF NOT EXISTS HOLIDAY_ROLE (
                                            HOLIDAY_ROLE_ID SERIAL,
                                            GAME_ID BIGINT NOT NULL,
                                            ROLE_ID BIGINT NOT NULL,
                                            PRIMARY KEY (HOLIDAY_ROLE_ID),
    CONSTRAINT fk_HOLIDAY_ROLE_GAME1
    FOREIGN KEY (GAME_ID)
    REFERENCES GAME (GAME_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT fk_HOLIDAY_ROLE_ROLE1
    FOREIGN KEY (ROLE_ID)
    REFERENCES ROLE (ROLE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    );

CREATE TABLE IF NOT EXISTS URNAISHI_NIGHT_ACT (
                                                  URNAISHI_NIGHT_ACT_ID SERIAL,
                                                  FROM_GAME_PARTICIPATION_ID BIGINT NOT NULL UNIQUE,
                                                  TO_GAME_PARTICIPATION_ID BIGINT NULL,
                                                  SELECTED_HOLIDAY_ROLES BOOLEAN NOT NULL,
                                                  PRIMARY KEY (URNAISHI_NIGHT_ACT_ID),
    CONSTRAINT fk_URNAISHI_NIGHT_ACT_GAME_PARTICIPATION
    FOREIGN KEY (TO_GAME_PARTICIPATION_ID)
    REFERENCES GAME_PARTICIPATION (GAME_PARTICIPATION_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT fk_URNAISHI_NIGHT_ACT_GAME_PARTICIPATION2
    FOREIGN KEY (FROM_GAME_PARTICIPATION_ID)
    REFERENCES GAME_PARTICIPATION (GAME_PARTICIPATION_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    );

CREATE TABLE IF NOT EXISTS KAITO_NIGHT_ACT (
                                               KAITO_NIGHT_ACT_ID SERIAL,
                                               FROM_GAME_PARTICIPATION_ID BIGINT NOT NULL UNIQUE,
                                               TO_GAME_PARTICIPATION_ID BIGINT NULL,
                                               PRIMARY KEY (KAITO_NIGHT_ACT_ID),
    CONSTRAINT fk_KAITO_NIGHT_ACT_GAME_PARTICIPATION
    FOREIGN KEY (TO_GAME_PARTICIPATION_ID)
    REFERENCES GAME_PARTICIPATION (GAME_PARTICIPATION_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT fk_KAITO_NIGHT_ACT_GAME_PARTICIPATION2
    FOREIGN KEY (FROM_GAME_PARTICIPATION_ID)
    REFERENCES GAME_PARTICIPATION (GAME_PARTICIPATION_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    );

CREATE TABLE IF NOT EXISTS CO_EVENT (
                                        CO_EVENT_ID SERIAL,
                                        GAME_ID BIGINT NOT NULL,
                                        CO_TM TIMESTAMP NULL,
                                        PRIMARY KEY (CO_EVENT_ID),
    CONSTRAINT fk_CO_EVENT_GAME1
    FOREIGN KEY (GAME_ID)
    REFERENCES GAME (GAME_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    );

CREATE TABLE IF NOT EXISTS CO_STATE (
                                        CO_EVENT_ID BIGINT NOT NULL,
                                        GAME_PARTICIPATION_ID BIGINT NOT NULL,
                                        ROLE_ID BIGINT NOT NULL,
                                        CONSTRAINT fk_CO_GAME_PARTICIPATION1
                                        FOREIGN KEY (GAME_PARTICIPATION_ID)
    REFERENCES GAME_PARTICIPATION (GAME_PARTICIPATION_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT fk_CO_ROLE1
    FOREIGN KEY (ROLE_ID)
    REFERENCES ROLE (ROLE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT fk_CO_STATE_CO_EVENT1
    FOREIGN KEY (CO_EVENT_ID)
    REFERENCES CO_EVENT (CO_EVENT_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    );